digraph G {
    compound=true;
    rankdir="LR";
    
    # implementation objects, not user CRUDable
    node[color=lightblue, style=filled]
    Settings

    # server-wide objects
    subgraph cluster_server {
        node[color=blue, style=bold];
        Sites;
        Schedules;
        "System Users";
        Settings;
        # Postgres [shape=cylinder];
        label = "Tableau Server";
    }
    
    QueryFilter;
    SiteRole;
    Job;
    Capability;
    
    #interfaces - object or facade
    node[color=green,shape=square, style=dashed];
    Content;
    Datasource;
    Sheet;
    
    # a standard object - bold means you can CRUD
    node[shape=ellipse;style=bold];

    # objects that exist within another object - implementation
    node[color=red]
    Revision
    Connection
    Sheet
    Dashboard
    Storyboard
    Viz
    
    
    node[color=black]
    edge[label="contains",color=red]
    {Workbook, Datasource}->Revision
    Workbook->Sheet
    
    

    edge[label="implements", dir=back, color=green, style=dashed];
    Content -> {Project, Workbook, Sheet, Datasource, Metric, Webhook, Flow}
    Sheet -> {Dashboard, Storyboard, Viz}
    
   
    Group; 
    
    
    # relationship = domain 'contains', ownership
    edge[label=owns, dir=back, arrowtail=ediamond, style=dashed, color=black];
    Project->{Workbook, Datasource}[ltail=cluster_collections]
    Sites -> {Content, User, Group}
    Group -> User
    User -> {Content}
    "System Users" -> User[label="has a"]
    Workbook -> {Sheet, Datasource, Revision}
    Datasource -> {Extract, Connection, Revision} // should this be 'contains'?

    
    edge [label="refers to", style=dotted]
    User->"Data Alert"[label="receives"]
    Content -> {Schedules, Settings}[ltail=cluster_Site];
    Flow->Datasource[label="produces?"]
    // not actually exposed in REST API Filter->User;
    {"Data Alert", Dashboard}-> Viz
    Schedules -> Task;
    Task->Job[label="is instance of"]
    Job->{Extract, Flow}
    {Group, User}->{SiteRole, Capability}[label="is assigned"]
    Capability->Content;
    Metric->Viz;
    
 
    #attributes of an object that can be managed as first class objects
    node[style=filled, color=yellow]
    edge[color=purple, label="Applies to"]
    Recent -> {Workbook, Sheet}
    Favorite->{Datasource,Project,Sheet,Workbook,Flow}
    Tag -> {Datasource, Workbook, Sheet}

    # an object that is a relationship between two other objects
    Subscription->{User, Group, Workbook, Sheet}
    Permission->{User, Capability, Content}
    QueryFilter->{User, Group, Content, Job}
    # Sort and Filter
    # Users, Groups, Datasources, Jobs, Projects, Views, Workbooks, Flow, Metrics
    # missing: DataAlert, Task, Schedule, Site


    label="Tableau Server REST API"

}


